{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","images","step","frameSize","itemWidth","animationDuration","infinite","useState","currentImgPosition","setCurrentImgPosition","finalImgPosition","length","isDisabledPrev","isDisabledNext","className","style","width","transition","map","image","transform","src","alt","type","onClick","prev","disabled","App","state","changeItemWidth","event","setState","target","value","changeFrameSize","changeStep","changeAnimationDuration","changeInfinite","checked","this","htmlFor","id","min","max","onChange","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d04070bc.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[],\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n  infinite: boolean,\n};\n\nconst Carousel: React.FC<Props> = ({\n  images,\n  step,\n  frameSize,\n  itemWidth,\n  animationDuration,\n  infinite,\n}) => {\n  const [currentImgPosition, setCurrentImgPosition] = useState(0);\n  const finalImgPosition = images.length - frameSize;\n  const isDisabledPrev = currentImgPosition === 0 && !infinite;\n  const isDisabledNext = currentImgPosition === finalImgPosition && !infinite;\n\n  function handlePrevImage() {\n    if (currentImgPosition > 0) {\n      setCurrentImgPosition(prev => (\n        prev - step >= 0\n          ? prev - step\n          : 0\n      ));\n    } else {\n      setCurrentImgPosition(finalImgPosition);\n    }\n  }\n\n  function handleNextImage() {\n    if (currentImgPosition < finalImgPosition) {\n      setCurrentImgPosition(prev => (\n        prev + step <= finalImgPosition\n          ? prev + step\n          : finalImgPosition\n      ));\n    } else {\n      setCurrentImgPosition(0);\n    }\n  }\n\n  return (\n    <div\n      className=\"Carousel\"\n      style={{\n        width: `${frameSize * itemWidth}px`,\n        transition: `${animationDuration}ms`,\n      }}\n    >\n      <ul className=\"Carousel__list\">\n        {images.map(image => (\n          <li\n            key={image}\n            style={{\n              transform: `translateX(${-(currentImgPosition * itemWidth)}px)`,\n              transition: `transform ${animationDuration}ms ease`,\n            }}\n          >\n            <img\n              src={image}\n              alt={image}\n              width={itemWidth}\n            />\n          </li>\n        ))}\n      </ul>\n\n      <div className=\"Carousel__buttons\">\n        <button\n          type=\"button\"\n          className=\"Carousel__button\"\n          onClick={handlePrevImage}\n          disabled={isDisabledPrev}\n        >\n          Prev\n        </button>\n\n        <button\n          data-cy=\"next\"\n          type=\"button\"\n          className=\"Carousel__button\"\n          onClick={handleNextImage}\n          disabled={isDisabledNext}\n        >\n          Next\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ninterface State {\n  images: string[];\n  itemWidth: number;\n  frameSize: number;\n  step: number;\n  animationDuration: number;\n  infinite: boolean;\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    itemWidth: 130,\n    frameSize: 3,\n    step: 3,\n    animationDuration: 1000,\n    infinite: false,\n  };\n\n  changeItemWidth = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({\n      itemWidth: +event.target.value,\n    });\n  };\n\n  changeFrameSize = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({\n      frameSize: +event.target.value,\n    });\n  };\n\n  changeStep = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({\n      step: +event.target.value,\n    });\n  };\n\n  changeAnimationDuration = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({\n      animationDuration: +event.target.value,\n    });\n  };\n\n  changeInfinite = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({\n      infinite: event.target.checked,\n    });\n  };\n\n  render() {\n    const {\n      images,\n      itemWidth,\n      frameSize,\n      step,\n      animationDuration,\n      infinite,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1 data-cy=\"title\" className=\"App__title\" >Carousel with {images.length} images</h1>\n\n        <div className=\"App__options\">\n          <label htmlFor=\"itemWidth\" className=\"App__options--label\">\n            Item Width:\n            <input\n              className=\"App__options--input\"\n              id=\"itemWidth\"\n              type=\"number\"\n              value={itemWidth}\n              min={130}\n              max={390}\n              onChange={this.changeItemWidth}\n            />\n          </label>\n\n          <label htmlFor=\"frameSize\" className=\"App__options--label\">\n            Frame Size:\n            <input\n              className=\"App__options--input\"\n              id=\"frameSize\"\n              type=\"number\"\n              value={frameSize}\n              min={1}\n              max={5}\n              step={1}\n              onChange={this.changeFrameSize}\n            />\n          </label>\n\n          <label htmlFor=\"step\" className=\"App__options--label\">\n            Step:\n            <input\n              className=\"App__options--input\"\n              id=\"step\"\n              type=\"number\"\n              value={step}\n              min={1}\n              max={5}\n              step={1}\n              onChange={this.changeStep}\n            />\n          </label>\n\n          <label htmlFor=\"animationDuration\" className=\"App__options--label\">\n            Animation Duration:\n            <input\n              className=\"App__options--input\"\n              id=\"animationDuration\"\n              type=\"number\"\n              value={animationDuration}\n              min={500}\n              max={5000}\n              step={500}\n              onChange={this.changeAnimationDuration}\n            />\n          </label>\n\n          <label htmlFor=\"infinite\" className=\"App__options--label\">\n            Infinite:\n            <input\n              className=\"App__options--input\"\n              id=\"infinite\"\n              type=\"checkbox\"\n              onChange={this.changeInfinite}\n            />\n          </label>\n        </div>\n\n        <Carousel\n          images={images}\n          step={step}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n          infinite={infinite}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}